{"version":3,"sources":["components/Navbar/navbar.js","components/Jumbotron/jumbotron.js","components/Search/search.js","components/cards/cards.js","utils/api.js","pages/Search/search.js","components/Hcards/hcards.js","pages/Saved/saved.js","pages/NoMatch/nomatch.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","id","href","target","rel","jumbotron","Search","props","name","placeholder","type","value","onChange","handleSearch","onClick","handleSubmit","Card","src","image","alt","title","save","info","axios","require","api","getBooks","query","get","concat","getSavedBooks","saveBook","book","post","deleteBook","delete","SearchPage","state","books","event","console","log","_event$target","_this","setState","Object","defineProperty","preventDefault","API","then","res","data","items","catch","err","volumeInfo","savedBook","authors","description","searchInfo","textSnippet","imageLinks","smallThumbnail","link","infoLink","_this2","this","_this3","Search_search","map","index","cards","key","Component","HCard","Saved","_id","hcards","NoMatch","App","isLoaded","Navbar_navbar","Jumbotron_jumbotron","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3d7fbd6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className='green'>\r\n            <div className=\"nav-wrapper\">\r\n                <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\r\n                    <li>\r\n                        <a href='/' className=\"logo\"> Google Books</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href='/search'>Search</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href='/saved'> Saved</a>\r\n                    </li>\r\n                </ul>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li>\r\n                        <a href='https://github.com/DBiles/Digital-Library' target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './jumbotron.css'\r\n\r\nfunction jumbotron() {\r\n    return (\r\n        <div className='container center-align'>\r\n            <h2>Google Book Search</h2>\r\n            <h4>Search for and Save Books of Interest</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default jumbotron;","import React from  'react';\r\nimport './search.css'\r\n\r\nconst Search = props => {\r\n\r\n    return(\r\n        <div className=\"row center-align\">\r\n            <div className='input-field col s6 push-s3'>\r\n                <input\r\n                    name='query'\r\n                    placeholder='Book Title'\r\n                    type='text'\r\n                    className='validate'\r\n                    value={ props.name }\r\n                    onChange={ props.handleSearch }>\r\n                </input>\r\n                <button \r\n                    className='waves-effect waves-light btn green'\r\n                    onClick={ props.handleSubmit } >\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\nimport './card.css'\r\n\r\nconst Card = props => {\r\n    return(\r\n            <div className=\"col s3\">\r\n                <div className=\"card hoverable z-depth-3\">\r\n                    <div className=\"card-image\">\r\n                        <img className=\"card-images\" src={props.image} alt=\"book cover\"></img>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <p><strong>{props.title}</strong></p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button id={props.id} className=\"waves-effect btn green\" onClick={props.save}>Save</button>\r\n                        <a className=\"waves-effect btn green\" href={props.info} target=\"_blank\" rel=\"noopener noreferrer\">View More</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Card;","const axios = require('axios');\r\n\r\nexport default {\r\n\r\n    // Get all books from google\r\n    getBooks: (query) => {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n    },\r\n\r\n    // Get all saved books\r\n    getSavedBooks: () => {\r\n        return axios.get(`/api/books/`);\r\n    },\r\n\r\n    // Save books to library\r\n    saveBook: (book) => {\r\n        return axios.post('/api/books', book);\r\n    },\r\n\r\n    // Delete / Remove books from library\r\n    deleteBook: (id) => {\r\n        return axios.delete('/api/books/' + id);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './search'\r\nimport Search from '../../components/Search';\r\nimport Card from '../../components/cards';\r\n\r\nimport API from '../../utils/api';\r\n\r\nclass SearchPage extends Component {\r\n    \r\n    state = {\r\n        query: '',\r\n        books: [],\r\n    };\r\n\r\n    // Grabbing random 'Harry Potter Books'\r\n    componentDidMount() {\r\n        API.getBooks('AWS')\r\n        .then(res => {\r\n            this.setState({ books: res.data.items});\r\n            console.log('Books', this.state.books);\r\n        })\r\n        .catch(err => console.log('err', err)\r\n        );\r\n    }\r\n\r\n    // As a user types, grab the input in the search bar\r\n    handleSearch = event => {\r\n        console.log('this is the target', event.target);\r\n        const { target: { name, value } } = event;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n        console.log(this.state);\r\n    }\r\n\r\n    // Search for the users input\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        console.log('state', this.state);\r\n        API.getBooks(this.state.query)\r\n        .then(res => {\r\n            this.setState({ \r\n                query: '',\r\n                books: res.data.items\r\n            });\r\n        })\r\n        .catch(err => {\r\n            console.log('err', err);\r\n        });\r\n    }\r\n\r\n    // Saving the book to the db\r\n    saveBook = event => {\r\n        const book = this.state.books[event.target.id].volumeInfo;\r\n        const savedBook = {\r\n            title: book.title,\r\n            authors: book.authors,\r\n            description: this.state.books[event.target.id].searchInfo.textSnippet,\r\n            image: book.imageLinks.smallThumbnail,\r\n            link: book.infoLink,\r\n        };\r\n\r\n        // Call api to save book\r\n        API.saveBook(savedBook)\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            console.log('Error', err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search\r\n                  name={ this.state.query }\r\n                  handleSearch={ this.handleSearch }\r\n                  handleSubmit={ this.handleSubmit }\r\n                />\r\n                <div className=\"row center-align\">\r\n                    {\r\n                        this.state.books.map((book, index) => (\r\n                            <Card \r\n                                key={ index }\r\n                                id={ index }\r\n                                title={ book.volumeInfo.title}\r\n                                image={ book.volumeInfo.imageLinks.smallThumbnail }\r\n                                info={ book.volumeInfo.infoLink}\r\n                                save={ this.saveBook }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPage;","import React from 'react'\r\nimport './hcard.css'\r\n\r\nconst HCard = props => {\r\n    return(\r\n        <div className=\"col s8 push-s2\">\r\n            <div className=\"card horizontal ch hoverable z-depth-3\">\r\n            <div className=\"card-image\">\r\n                <img className=\"hcard-images\" src={props.image} alt=\"saved book cover\" />\r\n            </div>\r\n            <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                <h5>{props.title}</h5>\r\n                <p><strong>Authors:</strong> {props.authors}</p>\r\n                <br/>\r\n                <p>{props.description}</p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                <button id={props.id} className=\"waves-effect btn green\" onClick={props.delete}>Delete</button>\r\n                <a className=\"waves-effect btn green\" href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">More Info</a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HCard;","import React, { Component } from 'react';\r\nimport './saved.css';\r\nimport API from '../../utils/api';\r\nimport HCard from '../../components/Hcards';\r\n\r\nclass Saved extends Component {\r\n\r\n    state = {\r\n        books: [],\r\n    }\r\n\r\n    // Grab all books from database on load\r\n    componentDidMount() {\r\n        API.getSavedBooks()\r\n        .then(res => {\r\n            this.setState({ books: res.data });\r\n            console.log(this.state);\r\n        })\r\n        .catch(err => {\r\n            console.log('Database retrieve Error', err);\r\n        });\r\n    }\r\n\r\n    // Remove a book from the library\r\n    deleteBook = event => {\r\n        let book = this.state.books[event.target.id]._id;\r\n        API.deleteBook(book)\r\n        .then( () => {\r\n            API.getSavedBooks()\r\n            .then(res => {\r\n                this.setState({ books: res.data});\r\n            })\r\n            .catch(err => {\r\n                console.log('Pulling Book Error - ', err);\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container card-container center-align\">\r\n                <div className=\"row\">\r\n                    {\r\n                        this.state.books.map((book, index) => (\r\n                            <HCard\r\n                                key={ index }\r\n                                id={ index }\r\n                                title={ book.title }\r\n                                authors={ book.authors }\r\n                                description={ book.description }\r\n                                link={ book.link }\r\n                                image={ book.image }\r\n                                delete={ this.deleteBook }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Saved;","import React from 'react';\r\nimport './nomatch.css'\r\n\r\nconst NoMatch = props => {\r\n    return (\r\n        <div className=\"nomatch container center-align\">\r\n            <h1>Sorry, No route found. Please check url</h1>\r\n            <h2>&gt;_&lt;</h2>\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default NoMatch;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/Navbar'\r\nimport Jumbotron from './components/Jumbotron'\r\nimport Search from './pages/Search'\r\nimport Saved from './pages/Saved'\r\nimport NoMatch from './pages/NoMatch'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    isLoaded: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState( {\r\n      isLoaded: true\r\n    });\r\n  }\r\n\r\n  render () {\r\n    if (!this.state.isLoaded) {\r\n      return (\r\n        <div>Loading .... </div>\r\n      )\r\n    } else {\r\n      console.log(`App loaded`);\r\n      return (\r\n        <div>\r\n          <Navbar />\r\n          <Jumbotron />\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/' component={ Search } />\r\n              <Route exact path='/search' component={ Search } />\r\n              <Route exact path='/saved' component={ Saved } />\r\n              <Route component={ NoMatch } />\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}